* Elisp Mode
- Start REPL with =ielm=.
- Execute expression in mini-buffer with =M-:=.
- Debug config starting Emacs with: =emacs --debug-init=.
- Reload config in current buffer with =M-x eval-buffer=.

* Org Mode
- Cheatsheet: http://xahlee.info/emacs/emacs/emacs_org_markup.html
- Zettelkasten with Org: https://github.com/egh/org-mode-zettelkasten
- Wrapping lines (=M-x fill-paragraph= / =M-q=): http://ergoemacs.org/emacs/emacs_unfill-paragraph.html
- Show the markup with =M-x visible-mode=
- Wrap long lines with =M-x visual-line-mode=

* Haskell Mode
- Generate /TAGS/ for all the project dependencies with =codex update= command and then load them with =M-x visit-tags-table=. Jump to tag is now possible with =M-.=.

* Color Themes
- When switching between them, disable previous themes with =M-x disable-theme= to not have interference.

* Tags
- Create tags with custom script =ctags-citre=.
- Tags are not used if ~eglot~ is enabled. Disable it with =eglot-shutdown= to use tags with ~citre~.
- With the =citre-mode=, see https://github.com/universal-ctags/citre/blob/master/docs/user-manual/citre-peek.md#peek-the-definition-of-a-symbol on how to navigate when using =citre-peek=.

* Annotations and Overlays
- Mark a region with =annotate-annotate=
- List annotations with =annotate-show-annotation-summary=
- Disable with =annotate-toggle-all-annotations-text=
- Overlay a symbol with =symbol-overlay-put=
- Disable with =symbol-overlay-remove-all=

* Merging changes
- =vdiff= / =ediff=: to merge changes between different files
- =smerge-mode= / =smerge-ediff=: to merge diff3 output from git

* Spelling
- Correct closest misspelled word with =z ==.
- Change language with =jinx-languages=.
- Enable ~text-mode~ to check the grammar with ~languagetool~ (run first =systemctl start languagetool.service=).

* Tree-Sitter
- Highlight nodes of the code with =tree-sitter-query-builder=. You can see the full code structure with =tree-sitter-debug-mode=. Highlight query example for Python:
#+BEGIN_SRC python
(type (identifier) @var)
(return_statement (call (identifier)) @var)
#+END_SRC

* Jupyter Notebooks
- First convert a notebook to Org with =pandoc notebook.ipynb -o notebook.org=.
- Execute its code blocks using https://github.com/nnicandro/emacs-jupyter.

* Tabs
- Select with: =M-x tab-switch=.

* Emacs packages
- Refresh repos with: =package-refresh-contents=.
- Upgrade all new available versions with: =package-list-packages= and later press =U x=.

* Saving/restoring sessions
- Save current session (windows/buffers) with: =desktop-save=
- Restore session with: =desktop-change-dir=

* Haskell with LSP
- Create these two project configuration files:
#+BEGIN_SRC yaml
# cat hie.yaml
cradle:
  cabal:
    - path: "./src"
      component: "lib:my-package"
    - path: "./src/Main.hs"
      component: "my-package:exe:my-app"
# cabal.project
packages: .
write-ghc-environment-files: always
#+END_SRC
- Start =eglot= ~haskell-language-server~.
- Alternatively start =C-c C-l= to use ~cabal-repl~ .

* EWW browser
- Start with: =eww= or =eww-open-in-new-buffer=.
- Move around with: =eww-list-histories= or =eww-list-buffers=.
- To render pages better as pure text, try: =eww-toggle-images= and =eww-readable=.

* TODO
- Use ~*-ts-mode~ in all the hooks for language modes.
